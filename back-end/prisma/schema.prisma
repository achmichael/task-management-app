generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String
  verification_code String?
  isVerified        Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  tasks             Task[]
  events            Event[]
  resetPasswordTokens ResetPasswordToken[]
}

enum TaskStatus{
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      TaskStatus
  deadline    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  startDate   DateTime @default(now())
  endDate     String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model ResetPasswordToken {
  id           Int @id @default (autoincrement())
  token        String   @unique
  expiresAt    DateTime
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
}

model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(500)
  expiresAt DateTime
  createdAt DateTime @default(now())
}
